// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rock_Paper_Scissors_Backend.Data;

#nullable disable

namespace Rock_Paper_Scissors_Backend.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231026115348_Game")]
    partial class Game
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Rock_Paper_Scissors_Backend.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Rock_Paper_Scissors_Backend.Entities.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PcMove")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerMove")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Rock_Paper_Scissors_Backend.Entities.Round", b =>
                {
                    b.HasOne("Rock_Paper_Scissors_Backend.Entities.Game", null)
                        .WithMany("Rounds")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Rock_Paper_Scissors_Backend.Entities.Game", b =>
                {
                    b.Navigation("Rounds");
                });
#pragma warning restore 612, 618
        }
    }
}
